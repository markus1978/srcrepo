<?xml version="1.0" encoding="ASCII"?>
<repositorymodel:RepositoryModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://www.eclipse.org/MoDisco/Java/0.2.incubation/java" xmlns:repositorymodel="http://hub.sam.repositorymodel/1.0" rootRevs="//@allRevs.0">
  <allRefs referencedCommit="//@allRevs.0" isPeeled="true" name="refs/remotes/origin/master"/>
  <allRefs referencedCommit="//@allRevs.0" isPeeled="true" name="HEAD"/>
  <allRefs referencedCommit="//@allRevs.0" isPeeled="true" isSymbolic="true" name="refs/remotes/origin/HEAD"/>
  <allRefs referencedCommit="//@allRevs.0" isPeeled="true" name="refs/heads/master"/>
  <allRevs author="Markus Scheidgen" name="2c8a4a5133850f13e24628ff96b3daf17795f9d0" time="2015-07-07T21:52:40.000+0200" message="Initial commit of all files.&#xA;">
    <parentRelations>
      <diffs newPath="ScalaOclMetricToolTestclasses/.classpath" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/.project" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/.settings/org.eclipse.jdt.core.prefs" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/ScalaOclMetricToolTestclasses_java.xmi" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitInterfaceLevelOneWithNoParent.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitInterfaceLevelTwoWithNoParents.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelOneWithParent.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelTwoWithTwoParents.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelZeroWithNoParent.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkLcomTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocChildOne.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocChildOneChildOne.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocChildTwo.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocInterfaceTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkWmcSecondClass.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkWmcTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeBreakTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeContinueTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeDoWhileTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeExceptionsTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeForTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeLogicalOperatorsTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeReturnTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTernaryOperatorTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestIfElse.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestSwitchCase.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestSwitchCase2.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeWhileTest.class" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/ckjm.ps1" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/ckjm.txt" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/ckjm2.txt" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/ckjm_res.txt" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/ckjm_time.txt" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CboTypeCouplingTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CboTypeCouplingTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CboTypeCouplingTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for analyzing methods arguments and returntypes for CBO Metric.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for analyzing methods arguments and returntypes for CBO Metric."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="returnNonPrimitive">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Testmethod which returns a non primitvie Type leading to a coupling&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testmethod which returns a non primitvie Type leading to a coupling"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier visibility="public"/>
                    <returnType/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="returnNonPrimitiveWithArgs">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Testmethod which returns a non primitive Type and having a non primitive Type as argument leading to two couplings.&#xA; * @param parameter&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testmethod which returns a non primitive Type and having a non primitive Type as argument"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="leading to two couplings."/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier visibility="public"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="parameter" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type/>
                    </parameters>
                    <returnType/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CboTypeCouplingTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CboTypeCouplingTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType" binding="testclasses.CkDitTest" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType" binding="testclasses.CkDitTest" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type" binding="testclasses.CkLcomTest" linkName="type"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.CboTypeCouplingTest.returnNonPrimitiveWithArgs(testclasses.CkLcomTest)" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.CboTypeCouplingTest" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.CboTypeCouplingTest.returnNonPrimitive()" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.35/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelOneWithNoParent.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelOneWithNoParent.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:InterfaceDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkDitInterfaceLevelOneWithNoParent">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkDitTest"/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkDitInterfaceLevelOneWithNoParent.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelOneWithNoParent.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.CkDitInterfaceLevelOneWithNoParent" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.36/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelTwoWithNoParents.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelTwoWithNoParents.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:InterfaceDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkDitInterfaceLevelTwoWithNoParents">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkDitTest."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                  <modifier visibility="public"/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkDitInterfaceLevelTwoWithNoParents.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelTwoWithNoParents.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.CkDitInterfaceLevelTwoWithNoParents" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.37/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelOneWithParent.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelOneWithParent.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkDitLevelOneWithParent">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkDitTest."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <superInterfaces/>
                  <superClass/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkDitLevelOneWithParent.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelOneWithParent.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superClass" binding="testclasses.CkDitLevelZeroWithNoParent" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superInterfaces.0" binding="testclasses.CkDitInterfaceLevelOneWithNoParent" linkName="type"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.CkDitLevelOneWithParent" target="//@allRevs.0/@parentRelations.0/@diffs.38/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelTwoWithTwoParents.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelTwoWithTwoParents.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkDitLevelTwoWithTwoParents">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkDitTest."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <superInterfaces/>
                  <superClass/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkDitLevelTwoWithTwoParents.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelTwoWithTwoParents.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superClass" binding="testclasses.CkDitLevelOneWithParent" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superInterfaces.0" binding="testclasses.CkDitInterfaceLevelOneWithNoParent" linkName="type"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.CkDitLevelTwoWithTwoParents" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.39/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelZeroWithNoParent.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelZeroWithNoParent.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkDitLevelZeroWithNoParent">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkDitTest."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                  <modifier visibility="public"/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkDitLevelZeroWithNoParent.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelZeroWithNoParent.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="testclasses.CkDitLevelZeroWithNoParent" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.40/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkDitTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeThis is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite. The simulated structure looks as follows: CkDitLevelZeroWithNoParent ^ | | CkDitInterfaceLevelOneWithNoParent &lt;------ CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ^&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;----------------------------------------- |&#x9;&#x9;| |&#x9;CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitInterfaceLevelTwoWithNoParents&#x9;&#x9;CkNocInterfaceTest |&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -----CkDitTest -------------------------------------------------------------------------- Therefore the result should be DIT(CkDitTest) = 3, because  CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent is the longest Path inside the inheritance tree.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="This is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite."/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="The simulated structure looks as follows:"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="CkDitLevelZeroWithNoParent"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="^"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="CkDitInterfaceLevelOneWithNoParent &lt;------ CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="^&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;-----------------------------------------"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitInterfaceLevelTwoWithNoParents&#x9;&#x9;CkNocInterfaceTest"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="-----CkDitTest --------------------------------------------------------------------------"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Therefore the result should be DIT(CkDitTest) = 3, because "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="is the longest Path inside the inheritance tree."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <superInterfaces/>
                  <superInterfaces/>
                  <superInterfaces/>
                  <superClass/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkDitTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superClass" binding="testclasses.CkDitLevelTwoWithTwoParents" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superInterfaces.0" binding="testclasses.CkDitInterfaceLevelTwoWithNoParents" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superInterfaces.1" binding="testclasses.CkDitInterfaceLevelOneWithNoParent" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superInterfaces.2" binding="testclasses.CkNocInterfaceTest" linkName="type"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.CkDitTest" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.41/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkLcomTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkLcomTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkLcomTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculatiung the LCOM Metric value from the CK Metric Suite. ClassVariables = {instanceVar1, instanceVar2, instanceVar3} MethodsInsideClass = {fooPostfixPrefix, ifFoo, ifFooNestedOperators, whileFoo, whileFooNestedOperators, barAssignment, bar2ComplexReturn, fooBar} MfooPostfixPrefix = {instanceVar1}   MifFoo = {instanceVar1}  MifFooNestedOperators = {instanceVar1, instanceVar3, instanceVar4}  MwhileFoo = {instanceVar3, instanceVar5}  MWhileFooNestedOperators = {instanceVar4, instanceVar5}  MbarAssignment = {instanceVar3}  Mbar2ComplexReturn = {instanceVar5}  MfooBar = {instanceVar2} MfooBarField = {instanceVar3} //intersection is empty P = { (MfooPostfixPrefix, MwhileFoo),  (MfooPostfixPrefix, MWhileFooNestedOperators), (MfooPostfixPrefix, MbarAssignment),(fooPostfixPrefix, bar2ComplexReturn), (MfooPostfixPrefix, MfooBar), (MfooPostfixPrefixMfooBarField) (MifFoo, MwhileFoo), (MifFoo, MWhileFooNestedOperators), (MifFoo, MbarAssignment),(ifFoo, bar2ComplexReturn), (MifFoo, MfooBar), (MifFoo, MfooBarField) (MifFooNestedOperators, MfooBar), (ifFooNestedOperators, bar2ComplexReturn) (MwhileFoo, MfooBar) (MWhileFooNestedOperators,MbarAssignment),(MWhileFooNestedOperators,MfooBar), (MWhileFooNestedOperators,MfooBarField) (MbarAssignment, Mbar2ComplexReturn), (MbarAssignment, MfooBar)&#x9; (Mbar2ComplexReturn, MfooBar), (Mbar2ComplexReturn, MfooBarField) (MfooBar, MfooBarField) }  //intersection is not empty Q = {(MfooPostfixPrefix, MifFoo),(MfooPostfixPrefix, MifFooNestedOperators) (MifFoo, MifFooNestedOperators) (MifFooNestedOperators, MwhileFoo),(MifFooNestedOperators, MWhileFooNestedOperators),(MifFooNestedOperators, MbarAssignment), (MifFooNestedOperators, MfooBarField)  (MwhileFoo, MWhileFooNestedOperators), (MwhileFoo, MbarAssignment), (MwhileFoo, Mbar2ComplexReturn), (MwhileFoo, MfooBarField) (MbarAssignment, MfooBarField) (MWhileFooNestedOperators,Mbar2ComplexReturn)  &#x9;&#x9; }  |P| = 23 |Q| = 13 Because of|P| = 23 > 13 = |Q|  => LCOM = |P| - |Q| = 23 - 13 = 10 &#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculatiung the LCOM Metric value from the CK Metric Suite."/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="ClassVariables = {instanceVar1, instanceVar2, instanceVar3}"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MethodsInsideClass = {fooPostfixPrefix, ifFoo, ifFooNestedOperators, whileFoo, whileFooNestedOperators, barAssignment, bar2ComplexReturn, fooBar}"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MfooPostfixPrefix = {instanceVar1}  "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MifFoo = {instanceVar1} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MifFooNestedOperators = {instanceVar1, instanceVar3, instanceVar4} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MwhileFoo = {instanceVar3, instanceVar5} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MWhileFooNestedOperators = {instanceVar4, instanceVar5} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MbarAssignment = {instanceVar3} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Mbar2ComplexReturn = {instanceVar5} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MfooBar = {instanceVar2}"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="MfooBarField = {instanceVar3}"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="//intersection is empty"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="P = { (MfooPostfixPrefix, MwhileFoo),  (MfooPostfixPrefix, MWhileFooNestedOperators), (MfooPostfixPrefix, MbarAssignment),(fooPostfixPrefix, bar2ComplexReturn), (MfooPostfixPrefix, MfooBar), (MfooPostfixPrefixMfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MifFoo, MwhileFoo), (MifFoo, MWhileFooNestedOperators), (MifFoo, MbarAssignment),(ifFoo, bar2ComplexReturn), (MifFoo, MfooBar), (MifFoo, MfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MifFooNestedOperators, MfooBar), (ifFooNestedOperators, bar2ComplexReturn)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MwhileFoo, MfooBar)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MWhileFooNestedOperators,MbarAssignment),(MWhileFooNestedOperators,MfooBar), (MWhileFooNestedOperators,MfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MbarAssignment, Mbar2ComplexReturn), (MbarAssignment, MfooBar)&#x9;"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(Mbar2ComplexReturn, MfooBar), (Mbar2ComplexReturn, MfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MfooBar, MfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="//intersection is not empty"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Q = {(MfooPostfixPrefix, MifFoo),(MfooPostfixPrefix, MifFooNestedOperators)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MifFoo, MifFooNestedOperators)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MifFooNestedOperators, MwhileFoo),(MifFooNestedOperators, MWhileFooNestedOperators),(MifFooNestedOperators, MbarAssignment), (MifFooNestedOperators, MfooBarField) "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MwhileFoo, MWhileFooNestedOperators), (MwhileFoo, MbarAssignment), (MwhileFoo, Mbar2ComplexReturn), (MwhileFoo, MfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MbarAssignment, MfooBarField)"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="(MWhileFooNestedOperators,Mbar2ComplexReturn)  &#x9;&#x9;"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="} "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|P| = 23"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|Q| = 13"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Because of|P| = 23 > 13 = |Q| "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="=> LCOM = |P| - |Q| = 23 - 13 = 10 "/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                    <modifier/>
                    <type type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="instanceVar1">
                      <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tokenValue="0"/>
                    </fragments>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                    <modifier/>
                    <type type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="instanceVar3">
                      <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tokenValue="0"/>
                    </fragments>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                    <modifier/>
                    <type type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="instanceVar4">
                      <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tokenValue="0"/>
                    </fragments>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                    <modifier/>
                    <type type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="instanceVar5">
                      <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tokenValue="0"/>
                    </fragments>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                    <modifier/>
                    <type/>
                    <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="instanceVar2">
                      <initializer xsi:type="java:StringLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" escapedValue="&quot;tester&quot;"/>
                    </fragments>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="fooPostfixPrefix">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 1" prefixOfParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="ifFoo">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 2" prefixOfParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="ifFooNestedOperators">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 3" prefixOfParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="whileFoo">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 2" prefixOfParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="whileFooNestedOperators">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 3" prefixOfParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="barAssignment">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 1" prefixOfParent="true"/>
                    <modifier visibility="private"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="bar2ComplexReturn">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 1" prefixOfParent="true"/>
                    <modifier visibility="private"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="fooBar">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 1" prefixOfParent="true"/>
                    <modifier visibility="protected"/>
                    <returnType/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="fooBarField">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//McCabe = 1" prefixOfParent="true"/>
                    <modifier visibility="protected"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@type //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@type //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@type //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@type //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@returnType //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@returnType //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@returnType //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@returnType //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@returnType //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.11/@returnType //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.13/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.5/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkLcomTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkLcomTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.5/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.11/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.12/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.13/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@type" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.12/@returnType" binding="java.lang.String" linkName="type"/>
            <targets id="testclasses.CkLcomTest.fooBar()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.12"/>
            <targets id="testclasses.CkLcomTest.whileFoo()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.8"/>
            <targets id="testclasses.CkLcomTest.ifFooNestedOperators()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.7"/>
            <targets id="testclasses.CkLcomTest" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.CkLcomTest.bar2ComplexReturn()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.11"/>
            <targets id="testclasses.CkLcomTest.instanceVar5" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.0"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.CkLcomTest.instanceVar1" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@fragments.0"/>
            <targets id="testclasses.CkLcomTest.instanceVar2" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@fragments.0"/>
            <targets id="testclasses.CkLcomTest.instanceVar3" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@fragments.0"/>
            <targets id="testclasses.CkLcomTest.instanceVar4" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses.CkLcomTest.fooBarField()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.13"/>
            <targets id="testclasses.CkLcomTest.fooPostfixPrefix()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.5"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.CkLcomTest.ifFoo()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6"/>
            <targets id="testclasses.CkLcomTest.whileFooNestedOperators()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.9"/>
            <targets id="testclasses.CkLcomTest.barAssignment()" target="//@allRevs.0/@parentRelations.0/@diffs.42/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.10"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOne.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOne.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkNocChildOne">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkNocTest&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkNocTest"/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <superClass/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkNocChildOne.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOne.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superClass" binding="testclasses.CkNocTest" linkName="type"/>
            <targets id="testclasses.CkNocChildOne" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.43/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOneChildOne.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOneChildOne.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkNocChildOneChildOne">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkNocTest&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkNocTest"/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <superClass/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkNocChildOneChildOne.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOneChildOne.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superClass" binding="testclasses.CkNocChildOne" linkName="type"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.CkNocChildOneChildOne" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.44/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildTwo.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildTwo.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkNocChildTwo">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkNocTest&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkNocTest"/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <superClass/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkNocChildTwo.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildTwo.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@superClass" binding="testclasses.CkNocTest" linkName="type"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="testclasses.CkNocChildTwo" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.45/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocInterfaceTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkNocInterfaceTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:InterfaceDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkNocInterfaceTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Part of the structure used for the CkDitTest"/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                  <modifier visibility="public"/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkNocInterfaceTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkNocInterfaceTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.CkNocInterfaceTest" target="//@allRevs.0/@parentRelations.0/@diffs.46/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkNocTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkNocTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeThis is testclass for the Number of children (NOC) metric from the CK metricssuite. The simulated structure looks as follows: CkNocTest ^ | | ------------------------- |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| CkNocChildOne&#x9;&#x9;&#x9;CkNocChildTwo ^ | CkNocChildOneChildOne Therefore the result should be NOC(CkNOCTest) = 2, because  The NOC Value only calculates direct Subtypes. Therefore CkNocChildOneChildOne gets not  included inside the result.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="This is testclass for the Number of children (NOC) metric from the CK metricssuite."/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="The simulated structure looks as follows:"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="CkNocTest"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="^"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="-------------------------"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="CkNocChildOne&#x9;&#x9;&#x9;CkNocChildTwo"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="^"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="|"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="CkNocChildOneChildOne"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Therefore the result should be NOC(CkNOCTest) = 2, because "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="The NOC Value only calculates direct Subtypes. Therefore CkNocChildOneChildOne gets not "/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="included inside the result."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here." enclosedByParent="true"/>
                  <modifier visibility="public"/>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkNocTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkNocTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.CkNocTest" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.47/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcSecondClass.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkWmcSecondClass.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkWmcSecondClass">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeInitially a Testclass for WMC. Now also used for CBO by using Methods from CkWmcTest which in turn access' the static variable WmcVariableAccess.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Initially a Testclass for WMC. Now also used for CBO by using Methods from CkWmcTest which in turn access' the"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="static variable WmcVariableAccess."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                    <modifier visibility="public" static="true"/>
                    <type type="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcVariableAccess">
                      <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tokenValue="1"/>
                    </fragments>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="main">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//CkWmcSeconds becomes coupled to CkWmcTest by calling its contructor => +1 " enclosedByParent="true"/>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//the methodcall would be another coupling, but the class was already count, therefore the value stays unchanged" enclosedByParent="true"/>
                    <modifier visibility="public" static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="args">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.9"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <orphanTypes xsi:type="java:ArrayType" name="java.lang.String[]" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type" dimensions="1">
                <elementType/>
              </orphanTypes>
              <compilationUnits name="CkWmcSecondClass.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkWmcSecondClass.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.9/@elementType" binding="java.lang.String" linkName="type"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.CkWmcSecondClass.main(java.lang.String[])" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="java.lang.String[]" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.9"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.CkWmcSecondClass" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="testclasses.CkWmcSecondClass.WmcVariableAccess" target="//@allRevs.0/@parentRelations.0/@diffs.48/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@fragments.0"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/CkWmcTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="CkWmcTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for the Weighted Methods Complexity Metric from the CK-Metricssuite. Should give a WMC-value of 9 = 3 Class methods + 3 instance methods + 3 methods with arguments.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for the Weighted Methods Complexity Metric from the CK-Metricssuite."/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a WMC-value of 9 = 3 Class methods + 3 instance methods + 3 methods with arguments."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestPublicStatic">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//Class methods" prefixOfParent="true"/>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                    <modifier visibility="public" static="true"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestPrivateStatic">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                    <modifier visibility="private" static="true"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestProtectedStatic">
                    <modifier visibility="protected" static="true"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestPublic">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//Instance methods" prefixOfParent="true"/>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestPrivate">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                    <modifier visibility="private"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestProtected">
                    <modifier visibility="protected"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestPublic">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//methods with parameters&#x9;" prefixOfParent="true"/>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//nothing to do here" enclosedByParent="true"/>
                    <modifier visibility="public" static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="a">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="b">
                      <modifier/>
                      <type/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestPrivate">
                    <modifier visibility="private"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="i">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="WmcTestProtected">
                    <modifier visibility="protected"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="o">
                      <modifier/>
                      <type/>
                    </parameters>
                    <returnType/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@parameters.0/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.5/@returnType //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="CkWmcTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/CkWmcTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.1 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@comments.1 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@parameters.1/@type" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@returnType" binding="java.lang.Object" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@parameters.0/@type" binding="java.lang.Object" linkName="type"/>
            <targets id="testclasses.CkWmcTest.WmcTestPublicStatic()" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="testclasses.CkWmcTest.WmcTestPrivate()" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.CkWmcTest.WmcTestPrivate(int)" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.CkWmcTest.WmcTestProtectedStatic()" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.CkWmcTest" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="testclasses.CkWmcTest.WmcTestPublic(int,java.lang.String)" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.6"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses.CkWmcTest.WmcTestProtected()" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.5"/>
            <targets id="testclasses.CkWmcTest.WmcTestPrivateStatic()" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="testclasses.CkWmcTest.WmcTestPublic()" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.3"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.CkWmcTest.WmcTestProtected(java.lang.Object)" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.8"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.49/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeBreakTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeBreakTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeBreakTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for the handling of break when calculating McCabe Metric.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for the handling of break when calculating McCabe Metric."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="breakTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 3 = 2 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 3 = 2 binary branches + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeBreakTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeBreakTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="testclasses.McCabeBreakTest.breakTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.McCabeBreakTest" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.50/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeContinueTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeContinueTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeContinueTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for the handling of continue when calculating McCabe Metric.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for the handling of continue when calculating McCabe Metric."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="continueTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 4 = 3 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 4 = 3 binary branches + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeContinueTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeContinueTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.McCabeContinueTest.continueTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.McCabeContinueTest" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.51/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeDoWhileTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeDoWhileTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeDoWhileTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of do while loops.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of do while loops."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="doWhileTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeDoWhileTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeDoWhileTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.McCabeDoWhileTest" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.McCabeDoWhileTest.doWhileTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.52/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeExceptionsTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeExceptionsTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeExceptionsTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of Exceptions.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of Exceptions."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="tryCatchTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give McCabe value = 2 : 1 catch-clause + 1&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give McCabe value = 2 : 1 catch-clause + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier visibility="public"/>
                    <returnType/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="tryCatchSideEffectTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give McCabe value = 3: 2 catch-clauses + 1&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give McCabe value = 3: 2 catch-clauses + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//maybe sideeffects..." enclosedByParent="true"/>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//maybe do some stuff after catch" enclosedByParent="true"/>
                    <modifier visibility="public"/>
                    <returnType/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="throwsTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give McCabe value = 2 : 1 catch-clause + 1&#xA; * @return&#xA; * @throws Exception&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give McCabe value = 2 : 1 catch-clause + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@throws">
                        <fragments xsi:type="java:TypeAccess"/>
                      </tags>
                    </comments>
                    <modifier visibility="public"/>
                    <thrownExceptions/>
                    <returnType/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeExceptionsTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeExceptionsTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.1 //@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.2 //@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.0/@tags.2/@fragments.0" binding="java.lang.Exception" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@returnType" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@thrownExceptions.0" binding="java.lang.Exception" linkName="type"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.McCabeExceptionsTest.tryCatchSideEffectTest()" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="testclasses.McCabeExceptionsTest.tryCatchTest()" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.McCabeExceptionsTest" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.McCabeExceptionsTest.throwsTest()" target="//@allRevs.0/@parentRelations.0/@diffs.53/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeForTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeForTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeForTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of do for loops.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of do for loops."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="forTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeForTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeForTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="testclasses.McCabeForTest" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.McCabeForTest.forTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.54/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeLogicalOperatorsTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of complex logical operators.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of complex logical operators."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="logicalOperatorsTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 9  = 1 binary branch + &amp;&amp;[what is the same like an if]  + 1 binary branch + ||[what is the same like an if] + 1 while[same like if] + ||[what is the same like an if] + 1 while[same like if] + &amp;&amp;[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 9 "/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="= 1 binary branch + &amp;&amp;[what is the same like an if] "/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 binary branch + ||[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 while[same like if] + ||[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 while[same like if] + &amp;&amp;[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="logicalOperatorsTest2">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 9  = + 1 for[same like if] + ||[what is the same like an if] + 1 for[same like if] + &amp;&amp;[what is the same like an if] + 1 do[same like if] + ||[what is the same like an if] + 1 do[same like if] + &amp;&amp;[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 9 "/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="= + 1 for[same like if] + ||[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 for[same like if] + &amp;&amp;[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 do[same like if] + ||[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 do[same like if] + &amp;&amp;[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="logicalOperatorsTest3">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Tester to find out how to calculate operators like &amp;&amp;, || correctly Should give a McCabe value of 5  = + 1 for[same like if]  + 1 &amp;&amp;[what is the same like an if] + 1 &amp;&amp; [what is the same like an if] + 1 ||[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Tester to find out how to calculate operators like &amp;&amp;, || correctly"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 5 "/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="= + 1 for[same like if] "/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 &amp;&amp;[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 &amp;&amp; [what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1 ||[what is the same like an if]"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="+ 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.1/@type //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeLogicalOperatorsTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.McCabeLogicalOperatorsTest" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.McCabeLogicalOperatorsTest.logicalOperatorsTest3(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.McCabeLogicalOperatorsTest.logicalOperatorsTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.McCabeLogicalOperatorsTest.logicalOperatorsTest2(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.55/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeReturnTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeReturnTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeReturnTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric with inner return statements.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric with inner return statements."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="returnTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="returnIsLastStatementTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 1.&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 1."/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="returnIsNotLastStatementTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//here could go a lot of code..." enclosedByParent="true"/>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeReturnTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeReturnTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@comments.1" package="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.McCabeReturnTest.returnTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses.McCabeReturnTest" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.McCabeReturnTest.returnIsLastStatementTest()" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.McCabeReturnTest.returnIsNotLastStatementTest()" target="//@allRevs.0/@parentRelations.0/@diffs.56/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.2"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTernaryOperatorTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTernaryOperatorTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeTernaryOperatorTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of the logical ternary Operator.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of the logical ternary Operator."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="simpleTernaryTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe metric of 2 = 1 binary branch + 1 if(i > j) then return i else return j&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe metric of 2 = 1 binary branch + 1"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="if(i > j) then"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="return i"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="else"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="return j"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="complexTernaryTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * should give a McCabe metric of 5 = 4 binary branches + 1 if(i>0) then if(i > 10) then if(i>100) then if((i+10) &lt; 200) return true else return false&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="should give a McCabe metric of 5 = 4 binary branches + 1"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="if(i>0) then"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="if(i > 10) then"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="if(i>100) then"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="if((i+10) &lt; 200)"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="return true"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="else"/>
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="return false"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeTernaryOperatorTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTernaryOperatorTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses.McCabeTernaryOperatorTest.simpleTernaryTest()" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.McCabeTernaryOperatorTest.complexTernaryTest()" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="testclasses.McCabeTernaryOperatorTest" target="//@allRevs.0/@parentRelations.0/@diffs.57/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestIfElse.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestIfElse.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeTestIfElse">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of if-then-else.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of if-then-else."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="ifElseTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 3 = 2 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 3 = 2 binary branches + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeTestIfElse.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestIfElse.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.McCabeTestIfElse.ifElseTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="testclasses.McCabeTestIfElse" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.58/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeTestSwitchCase">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of switch-case.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of switch-case."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="wochentagsName">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 6.&#xA; * @param nummer&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 6."/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nummer" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="wochentagsName2">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 8.&#xA; * @param nummer&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 8."/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nummer" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeTestSwitchCase.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType" binding="java.lang.String" linkName="type"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.McCabeTestSwitchCase" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="testclasses.McCabeTestSwitchCase.wochentagsName2(int)" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.McCabeTestSwitchCase.wochentagsName(int)" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.59/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase2.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase2.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeTestSwitchCase2">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of switch-case and containing outcommented lines at the end which has to be ignored.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of switch-case and containing outcommented lines at the end which has to be ignored."/>
                    </tags>
                  </comments>
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Comments should be ignored&#xA; */&#xA;" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;static String wochentagsName2(int nummer) {" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;&#x9;switch(nummer) {" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;&#x9;    case 1: return &quot;Montag2&quot;;" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;&#x9;    case 2: return &quot;Dienstag2&quot;;" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;&#x9;  }" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;&#x9;return &quot;unknown&quot;;" enclosedByParent="true"/>
                  <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="//&#x9;}" enclosedByParent="true"/>
                  <comments xsi:type="java:BlockComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/*static String wochentagsName2(int nummer) {&#xD;&#xA;&#x9;&#x9;switch(nummer) {&#xD;&#xA;&#x9;&#x9;    case 1: return &quot;Montag2&quot;;&#xD;&#xA;&#x9;&#x9;    case 2: return &quot;Dienstag2&quot;;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;return &quot;unknown&quot;;&#xD;&#xA;&#x9;}*/" enclosedByParent="true"/>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="wochentagsName">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 6&#xA; * @param nummer&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 6"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nummer" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="wochentagsName2">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 7&#xA; * @param nummer&#xA; * @return&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 7"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@return"/>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nummer" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeTestSwitchCase2.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase2.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.1 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.2 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.3 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.4 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.5 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.6 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.7 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.8 //@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.9" package="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType" binding="java.lang.String" linkName="type"/>
            <targets id="testclasses.McCabeTestSwitchCase2" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="testclasses.McCabeTestSwitchCase2.wochentagsName(int)" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.McCabeTestSwitchCase2.wochentagsName2(int)" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.60/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeWhileTest.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/McCabeWhileTest.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="McCabeWhileTest">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for calculating McCabe Metric of while loops.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for calculating McCabe Metric of while loops."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="whileTest">
                    <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                        <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
                      </tags>
                      <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@param">
                        <fragments xsi:type="java:SingleVariableAccess" variable="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1"/>
                      </tags>
                    </comments>
                    <modifier static="true"/>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pA" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <parameters originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="pB" usageInVariableAccess="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0">
                      <modifier/>
                      <type type="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
                    </parameters>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="McCabeWhileTest.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/McCabeWhileTest.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="testclasses.McCabeWhileTest.whileTest(int,int)" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="testclasses.McCabeWhileTest" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.61/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/NestedClasses.java" type="ADD" oldPath="/dev/null">
        <file xsi:type="repositorymodel:JavaCompilationUnitRef" path="/ScalaOclMetricToolTestclasses/src/testclasses/NestedClasses.java">
          <compilationUnitModel compilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
            <javaModel>
              <ownedElements name="testclasses">
                <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="NestedClasses">
                  <comments xsi:type="java:Javadoc" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="/** &#xA; * @author Frederik MartickeTestclass for diffrent metrics. In general its used to ensure, that nested classes inside a compilation unit were analyzed as well.&#xA; */&#xA;" prefixOfParent="true">
                    <tags originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" tagName="@author">
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text=" Frederik Marticke"/>
                      <fragments xsi:type="java:TextElement" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" text="Testclass for diffrent metrics. In general its used to ensure, that nested classes inside a compilation unit were analyzed as well."/>
                    </tags>
                  </comments>
                  <modifier visibility="public"/>
                  <bodyDeclarations xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nested1">
                    <modifier visibility="public"/>
                    <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                      <modifier/>
                      <type/>
                      <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="s1">
                        <initializer xsi:type="java:StringLiteral" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" escapedValue="&quot;string1&quot;"/>
                      </fragments>
                    </bodyDeclarations>
                    <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                      <modifier/>
                      <type/>
                      <fragments originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="n2">
                        <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0">
                          <type/>
                        </initializer>
                      </fragments>
                    </bodyDeclarations>
                    <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nestedMethod1">
                      <modifier visibility="private"/>
                      <returnType type="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                    </bodyDeclarations>
                    <bodyDeclarations xsi:type="java:ClassDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nested2">
                      <modifier visibility="private"/>
                      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="nestedMethod2">
                        <comments xsi:type="java:LineComment" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" content="// foo" enclosedByParent="true"/>
                        <modifier visibility="private"/>
                        <returnType type="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                      </bodyDeclarations>
                    </bodyDeclarations>
                    <superInterfaces/>
                    <superClass/>
                  </bodyDeclarations>
                  <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@compilationUnits.0" name="outerMethod1">
                    <modifier visibility="public"/>
                    <returnType type="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
                  </bodyDeclarations>
                </ownedElements>
              </ownedElements>
              <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int"/>
              <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
              <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
              <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
              <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
              <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.2/@returnType //@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.3/@bodyDeclarations.0/@returnType //@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@returnType"/>
              <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
              <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
              <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
              <compilationUnits name="NestedClasses.java" originalFilePath="/Users/markus/Documents/Projects/VisualEMF/03-git/srcrepo/de.hub.srcrepo.tests/metrics-test.git/ScalaOclMetricToolTestclasses/src/testclasses/NestedClasses.java" commentList="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@comments.0 //@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.3/@bodyDeclarations.0/@comments.0" package="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0" types="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            </javaModel>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@superClass" binding="testclasses.CkNocTest" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@superInterfaces.0" binding="testclasses.CkDitInterfaceLevelOneWithNoParent" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.0/@type" binding="java.lang.String" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.1/@type" binding="testclasses.NestedClasses.nested1.nested2" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.1/@fragments.0/@initializer/@type" binding="testclasses.NestedClasses.nested1.nested2" linkName="type"/>
            <pendings clientNode="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.1/@fragments.0/@initializer" binding="testclasses.NestedClasses.nested1.nested2.nested2()" linkName="method"/>
            <targets id="testclasses.NestedClasses.nested1.nested2.nestedMethod2()" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.3/@bodyDeclarations.0"/>
            <targets id="testclasses.NestedClasses.outerMethod1()" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.1"/>
            <targets id="void" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.5"/>
            <targets id="double" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.3"/>
            <targets id="byte" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.8"/>
            <targets id="testclasses.NestedClasses.nested1" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0"/>
            <targets id="testclasses.NestedClasses.nested1.s1" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.0/@fragments.0"/>
            <targets id="testclasses.NestedClasses.nested1.nestedMethod1()" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.2"/>
            <targets id="float" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.2"/>
            <targets id="int" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.0"/>
            <targets id="long" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.1"/>
            <targets id="testclasses.NestedClasses.nested1.nested2" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.3"/>
            <targets id="boolean" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.4"/>
            <targets id="testclasses.NestedClasses.nested1.n2" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@bodyDeclarations.1/@fragments.0"/>
            <targets id="testclasses.NestedClasses" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0/@ownedElements.0"/>
            <targets id="testclasses" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@ownedElements.0"/>
            <targets id="char" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.6"/>
            <targets id="short" target="//@allRevs.0/@parentRelations.0/@diffs.62/@file/@compilationUnitModel/@javaModel/@orphanTypes.7"/>
          </compilationUnitModel>
        </file>
      </diffs>
      <diffs newPath="ScalaOclMetricToolTestclasses/testclasses.jar" type="ADD" oldPath="/dev/null"/>
      <diffs newPath="ScalaOclMetricToolTestclasses/tests.jar" type="ADD" oldPath="/dev/null"/>
    </parentRelations>
  </allRevs>
</repositorymodel:RepositoryModel>
