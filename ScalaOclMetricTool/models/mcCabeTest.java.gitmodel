<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://www.eclipse.org/MoDisco/Java/0.2.incubation/java" xmlns:repositorymodel="http://hub.sam.repositorymodel/1.0">
  <repositorymodel:RepositoryModel javaModel="/1" rootRev="/0/@allRevs.7">
    <allRefs referencedCommit="/0/@allRevs.0" isPeeled="true" name="refs/heads/master"/>
    <allRefs referencedCommit="/0/@allRevs.0" isPeeled="true" name="refs/remotes/origin/master"/>
    <allRefs referencedCommit="/0/@allRevs.0" isPeeled="true" isSymbolic="true" name="HEAD"/>
    <allRevs author="smoovie" name="5eafd73353fc51f4d967b0f382e663b7dabc94f9" time="2015-02-27T13:39:37.000+0100" message="[CKMetric_CBO] added second interface implementation for further testing&#xA;">
      <parentRelations parent="/0/@allRevs.4">
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.41"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="13d729abf3144c35114c110b8f7603c9b359e7ce" time="2014-12-28T16:09:10.000+0100" message="add a second compilationUnit for McCabeTest" childRelations="/0/@allRevs.3/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.2">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest2.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest2.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.7"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="6407efdcf15b19184a868dd8e8321d65e1fa2979" time="2014-12-27T15:29:31.000+0100" message="added a seconds switch construct for testing" childRelations="/0/@allRevs.1/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.8">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.6"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="f260554ceeb335c2eeb3e8453e1269e98dc0f145" time="2014-12-28T16:12:29.000+0100" message="modified seconds cUnit and added commented blocks for testiing excludes" childRelations="/0/@allRevs.17/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.1">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest2.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest2.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest2.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest2.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.8"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="aed85e1aaf2c7e7ae849cc0aec5889e96f14eea9" time="2015-02-08T14:12:21.000+0100" message="added a second class coupling&#xA;" childRelations="/0/@allRevs.0/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.5">
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcSecondClass.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcSecondClass.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.40"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="c968fd12aa679aaacf98a94249d1735955848b79" time="2015-02-01T21:45:46.000+0100" message="[CKMetric_CBO]added new class for test&#xA;" childRelations="/0/@allRevs.4/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.21">
        <diffs newPath="ScalaOclMetricToolTestclasses/ScalaOclMetricToolTestclasses_java.xmi" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/ScalaOclMetricToolTestclasses_java.xmi"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkWmcSecondClass.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkWmcTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkWmcTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcSecondClass.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.38"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.39"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="d60859dc1e4dd78eed1260334079834da3f4f551" time="2014-12-27T02:14:06.000+0100" message="test..." childRelations="/0/@allRevs.24/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.7">
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.1"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="b5180262aab6bd5ddeebd73a676b690444cdbee1" time="2014-12-27T02:12:28.000+0100" message="init" childRelations="/0/@allRevs.6/@parentRelations.0">
      <parentRelations>
        <diffs newPath="ScalaOclMetricToolTestclasses/.classpath" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/.project" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/.settings/org.eclipse.jdt.core.prefs" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.0"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="7d8ebd362209ab4a1870f0546d75cf7fa2c94f67" time="2014-12-27T14:36:31.000+0100" message="expanded switch" childRelations="/0/@allRevs.2/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.9">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.5"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="8f84531dba0a4edd163650946cbd6e1a4de99bba" time="2014-12-27T02:30:20.000+0100" message="just try" childRelations="/0/@allRevs.8/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.18">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.4"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="marticke" name="a6f3bac29f381924fc775aa0eedaf199472b9d2c" time="2014-12-29T13:49:29.000+0100" message="try to analyze strange behaviour on linux" childRelations="/0/@allRevs.22/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.11">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestSwitchCase.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestSwitchCase.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.11"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="f60155f274815ea12abf0e66fe23070098f2b5e9" time="2014-12-28T17:21:53.000+0100" message="added new testcase for if-Else" childRelations="/0/@allRevs.10/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.17">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestIfElse.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestIfElse.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestIfElse.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestIfElse.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.10"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="bd630d5e5418c6ec491effa8b15f3897e77bb07f" time="2015-01-11T19:05:03.000+0100" message="added methods for while, dowhile, for with logicalOperators" childRelations="/0/@allRevs.20/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.13">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeLogicalOperatorsTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeLogicalOperatorsTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.22"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="1601baa07cce740c96e085257d23ceeaec44bfc3" time="2015-01-11T19:04:58.000+0100" message="added testclass for logical operators" childRelations="/0/@allRevs.12/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.16">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeLogicalOperatorsTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.21"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="5fdf40b57ba35d393e3cc77752560354b7c362ab" time="2015-01-25T14:51:24.000+0100" message="disabled eclipse metricsTool&#xA;" childRelations="/0/@allRevs.23/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.15">
        <diffs newPath="ScalaOclMetricToolTestclasses/.project" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/.project"/>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="e1ad16e670b35d0320715e720d048a3d53adceb1" time="2015-01-25T14:18:02.000+0100" message="Testclasses for the CK-Metrics {WMC, DIT, NOC}&#xA;" childRelations="/0/@allRevs.14/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.20">
        <diffs newPath="ScalaOclMetricToolTestclasses/.project" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/.project"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/ScalaOclMetricToolTestclasses_java.xmi" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitInterfaceLevelOneWithNoParent.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelOneWithParent.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelTwoWithNoParent.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelTwoWithTwoParents.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelZeroWithNoParent.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocChildOne.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocChildOneChildOne.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocChildTwo.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkNocTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkWmcTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelOneWithNoParent.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.33"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelOneWithParent.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.29"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelTwoWithNoParent.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.28"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelTwoWithTwoParents.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.26"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelZeroWithNoParent.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.34"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.25"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOne.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.27"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildOneChildOne.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.24"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocChildTwo.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.31"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkNocTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.30"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkWmcTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.32"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="dfa968419428a7a98831e2f2c9b216ba0ac0619c" time="2015-01-11T19:04:54.000+0100" message="modified some testclasses (->Discussion)" childRelations="/0/@allRevs.13/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.19">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeBreakTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeBreakTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeContinueTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeContinueTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeReturnTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeReturnTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeBreakTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeBreakTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.18"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeContinueTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeContinueTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.19"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeReturnTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeReturnTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.20"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="6edcb133e4b4504949dfd07ab8c03667d79f25ff" time="2014-12-28T16:31:21.000+0100" message="each testcase gets his own file to avoid massive testcommits" childRelations="/0/@allRevs.11/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.3">
        <diffs newPath="/dev/null" type="DELETE" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest2.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestIfElse.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestSwitchCase.class" type="RENAME" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTestSwitchCase2.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestIfElse.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.9"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase.java" type="RENAME" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTestSwitchCase2.java" type="RENAME" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest2.java"/>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="eaf5356fb4929491da43a1ee91015eb9bfc0025a" time="2014-12-27T02:28:41.000+0100" message="senseless" childRelations="/0/@allRevs.9/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.24">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.3"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="8d61a7a1c66cae860872266eea59e65330d43c8a" time="2015-01-11T19:04:49.000+0100" message="[wip] Testcases for return. What about last statement restriction?" childRelations="/0/@allRevs.16/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.22">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeReturnTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeReturnTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.17"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="cf0a017f66d82bc090b790d029b95fae2b6d09dd" time="2015-01-11T19:05:08.000+0100" message="added testmethod with multiple logical operators" childRelations="/0/@allRevs.15/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.12">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeLogicalOperatorsTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeLogicalOperatorsTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeLogicalOperatorsTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.23"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="bfb274c3c6eff4a7021c19f051ffb1816c6febb2" time="2015-02-01T14:36:42.000+0100" message="small restructioring&#xA;" childRelations="/0/@allRevs.5/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.23">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitInterfaceLevelTwoWithNoParents.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelOneWithParent.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelOneWithParent.class"/>
        <diffs newPath="/dev/null" type="DELETE" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitLevelTwoWithNoParent.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/CkDitTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitInterfaceLevelTwoWithNoParents.java" type="RENAME" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelTwoWithNoParent.java"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelOneWithParent.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitLevelOneWithParent.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.37"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.36"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="7c312339811b51501fc54d3c4330d36f672a5ca0" time="2015-01-11T19:04:45.000+0100" message="added testcases for break, while, doWhile, continue, for" childRelations="/0/@allRevs.19/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.10">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeBreakTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeContinueTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeDoWhileTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeForTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeWhileTest.class" type="ADD" oldPath="/dev/null"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeBreakTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.12"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeContinueTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.14"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeDoWhileTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.16"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeForTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.15"/>
        </diffs>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeWhileTest.java" type="ADD" oldPath="/dev/null">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.13"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="778abd261c691136e231fa1ac14792778ec9601a" time="2015-01-31T22:34:57.000+0100" message="Tests for CkMetric-DIT&#xA;" childRelations="/0/@allRevs.21/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.14">
        <diffs newPath="ScalaOclMetricToolTestclasses/ScalaOclMetricToolTestclasses_java.xmi" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/ScalaOclMetricToolTestclasses_java.xmi"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/CkDitTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.35"/>
        </diffs>
      </parentRelations>
    </allRevs>
    <allRevs author="smoovie" name="343ee224646b2c2f02d1ed4d125ccdacfc8bc28e" time="2014-12-27T02:25:30.000+0100" message="tae" childRelations="/0/@allRevs.18/@parentRelations.0">
      <parentRelations parent="/0/@allRevs.6">
        <diffs newPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/bin/testclasses/McCabeTest.class"/>
        <diffs newPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java" type="MODIFY" oldPath="ScalaOclMetricToolTestclasses/src/testclasses/McCabeTest.java">
          <file xsi:type="repositorymodel:JavaCompilationUnitRef" compilationUnit="/1/@compilationUnits.2"/>
        </diffs>
      </parentRelations>
    </allRevs>
  </repositorymodel:RepositoryModel>
  <java:Model>
    <ownedElements name="testclasses">
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.0" name="McCabeTest">
        <annotations originalCompilationUnit="/1/@compilationUnits.0">
          <type type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.0"/>
          <values>
            <value xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.0" escapedValue="&quot;javadoc&quot;"/>
          </values>
        </annotations>
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.0" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.0">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.0">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0"/>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.0">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.0" escapedValue="&quot;(unbekannter Wochentag)&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.0" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.1" name="McCabeTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.1" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.1">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.1">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@parameters.0"/>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.1">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.1" escapedValue="&quot;(unbekannter Wochentag)&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.1" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.2" name="McCabeTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.2" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.2">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.2">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@parameters.0"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.2" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.3" name="McCabeTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.3" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.3">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.3">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@parameters.0"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.3" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.4" name="McCabeTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.4" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.4"/>
          <parameters originalCompilationUnit="/1/@compilationUnits.4" name="nummer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.5" name="McCabeTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.5" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.5">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.5">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Montag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Dienstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Mittwoch&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Donnerstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Freitag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="6"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Samstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.5" tokenValue="7"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;Sonntag&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.5">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.5" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.5" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.6" name="McCabeTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.6" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.6">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.6">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.0/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Montag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Dienstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Mittwoch&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Donnerstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Freitag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="6"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Samstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="7"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Sonntag&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.6" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.6" name="wochentagsName2">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.6">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.6">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Montag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Dienstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Mittwoch2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Donnerstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Freitag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="6"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Samstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.6" tokenValue="7"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;Sonntag2&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.6">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.6" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.6" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.7" name="McCabeTest2">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.7" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.7">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.7">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.7/@bodyDeclarations.0/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.7" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.7" escapedValue="&quot;Montag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.7" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.7" escapedValue="&quot;Dienstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.7" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.7" escapedValue="&quot;Mittwoch&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.7" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.7" escapedValue="&quot;Donnerstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.7" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.7">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.7" escapedValue="&quot;Freitag&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.7">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.7" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.7" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.7/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.8" name="McCabeTest2">
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;static String wochentagsName2(int nummer) {" enclosedByParent="true"/>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;&#x9;switch(nummer) {" enclosedByParent="true"/>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;&#x9;    case 1: return &quot;Montag2&quot;;" enclosedByParent="true"/>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;&#x9;    case 2: return &quot;Dienstag2&quot;;" enclosedByParent="true"/>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;&#x9;  }" enclosedByParent="true"/>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;&#x9;return &quot;unknown&quot;;" enclosedByParent="true"/>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.8" content="//&#x9;}" enclosedByParent="true"/>
        <comments xsi:type="java:BlockComment" originalCompilationUnit="/1/@compilationUnits.8" content="/*static String wochentagsName2(int nummer) {&#xD;&#xA;&#x9;&#x9;switch(nummer) {&#xD;&#xA;&#x9;&#x9;    case 1: return &quot;Montag2&quot;;&#xD;&#xA;&#x9;&#x9;    case 2: return &quot;Dienstag2&quot;;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;return &quot;unknown&quot;;&#xD;&#xA;&#x9;}*/" enclosedByParent="true"/>
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.8" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.8">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.8">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.0/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Montag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Dienstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Mittwoch&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Donnerstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Freitag&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.8" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.8" name="wochentagsName2">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.8">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.8">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.1/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Montag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Dienstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Mittwoch2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Donnerstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Freitag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.8" tokenValue="6"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;Samstag2&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.8">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.8" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.8" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.1/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.9" name="McCabeTestIfElse">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.9" name="ifElseTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.9" content="/** &#xA; * Should give a McCabe value of 3 = 2 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.9">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.9" text="Should give a McCabe value of 3 = 2 binary branches + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.9" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.9" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.9">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.9">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.9" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.9">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.9" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.9">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.9" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <thenStatement xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.9">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.9" operator="&lt;">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.9">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.9" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.9" escapedValue="&quot;b&lt;a&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </thenStatement>
                <elseStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.9">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.9" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.9" escapedValue="&quot;a>b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </elseStatement>
              </thenStatement>
              <elseStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.9">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.9" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.9" escapedValue="&quot;a==b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </elseStatement>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.9" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.9" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.10" name="McCabeTestIfElse">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.10" name="ifElseTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.10" content="/** &#xA; * Should give a McCabe value of 3 = 2 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.10">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.10" text="Should give a McCabe value of 3 = 2 binary branches + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.10" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.10" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.10">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.10">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.10" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.10">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.10" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.10">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.10" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <thenStatement xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.10">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.10" operator="&lt;">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.10">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.10" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.10" escapedValue="&quot;b&lt;a&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </thenStatement>
                <elseStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.10">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.10" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.10" escapedValue="&quot;a>b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </elseStatement>
              </thenStatement>
              <elseStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.10">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.10" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.10" escapedValue="&quot;a==b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </elseStatement>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.10" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.10" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.11" name="McCabeTestSwitchCase">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.11" name="wochentagsName">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.11">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.11">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.0/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Montag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Dienstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Mittwoch&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Donnerstag&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Freitag&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.11" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.0/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.11" name="wochentagsName2">
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.11">
            <statements xsi:type="java:SwitchStatement" originalCompilationUnit="/1/@compilationUnits.11">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.1/@parameters.0"/>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="1"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Montag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="2"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Dienstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="3"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Mittwoch2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="4"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Donnerstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="5"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Freitag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="6"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Samstag2&quot;"/>
              </statements>
              <statements xsi:type="java:SwitchCase" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.11" tokenValue="7"/>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
                <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;Sonntag2&quot;"/>
              </statements>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.11">
              <expression xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.11" escapedValue="&quot;unknown&quot;"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.11" name="nummer" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.1/@body/@statements.0/@expression">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.12" name="McCabeBreakTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.12" name="breakTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.12" content="/** &#xA; * Should give a McCabe value of 3 = 2 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.12">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.12" text="Should give a McCabe value of 3 = 2 binary branches + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.12" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.12" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.12">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.12">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.12" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.12">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.12" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.12">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.12" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <body xsi:type="java:Block" originalCompilationUnit="/1/@compilationUnits.12">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.12">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.12" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.12" escapedValue="&quot;a==b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </statements>
                <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.12">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.12" operator="==">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:BreakStatement" originalCompilationUnit="/1/@compilationUnits.12"/>
                </statements>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.12" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.12" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.13" name="McCabeWhileTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.13" name="whileTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.13" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.13">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.13" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.13" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.13" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.13">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.13">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.13" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.13">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.13" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.13">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.13" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.13">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.13" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.13" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.13" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.13" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.14" name="McCabeContinueTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.14" name="continueTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.14" content="/** &#xA; * Should give a McCabe value of 4 = 3 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.14">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.14" text="Should give a McCabe value of 4 = 3 binary branches + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.14" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.14" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.14">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.14">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.14" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.2/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.14">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.14" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.2/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.14">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.14" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <body xsi:type="java:Block" originalCompilationUnit="/1/@compilationUnits.14">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.14">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.14" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.14" escapedValue="&quot;a==b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </statements>
                <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.14">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.14" operator=">">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:ContinueStatement" originalCompilationUnit="/1/@compilationUnits.14"/>
                </statements>
                <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.14">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.14" operator="==">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:BreakStatement" originalCompilationUnit="/1/@compilationUnits.14"/>
                </statements>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.14" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.14" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.15" name="McCabeForTest" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.2/@expression/@expression">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.15" name="forTest" usages="/1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.2/@expression">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.15" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.15">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.15" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.15" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.15" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.15">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.15">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.15" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.15">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.15" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@body/@expression/@arguments.0/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.15">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.15" name="i" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@initializers.0/@leftHandSide /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@updaters.0/@operand">
                <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.15" tokenValue="0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:ForStatement" originalCompilationUnit="/1/@compilationUnits.15">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.15" operator="&lt;">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.2/@fragments.0"/>
              </expression>
              <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="/1/@compilationUnits.15">
                <operand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.2/@fragments.0"/>
              </updaters>
              <initializers xsi:type="java:Assignment" originalCompilationUnit="/1/@compilationUnits.15">
                <leftHandSide xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.2/@fragments.0"/>
                <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.15" tokenValue="10"/>
              </initializers>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.15">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.15" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.15" operator="+">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.15" escapedValue="&quot;'b'&quot;"/>
                    <extendedOperands xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.15" escapedValue="&quot;is better than 'a'&quot;"/>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.15" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.15" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.16" name="McCabeDoWhileTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.16" name="doWhileTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.16" content="/** &#xA; * Should give a McCabe value of 2 = 1 binary branch + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.16">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.16" text="Should give a McCabe value of 2 = 1 binary branch + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.16" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.16" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.16">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.16">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.16" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.16">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.16" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:DoStatement" originalCompilationUnit="/1/@compilationUnits.16">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.16" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <body xsi:type="java:Block" originalCompilationUnit="/1/@compilationUnits.16">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.16">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.16" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.16" escapedValue="&quot;a!=b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </statements>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.16" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.16" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.17" name="McCabeReturnTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.17" name="returnTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.17" content="/** &#xA; * TODO: what about the last statement restriction? Should give a McCabe value of 3 = 1 binary branch + 1 return + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.17">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.17" text="TODO: what about the last statement restriction?"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.17" text="Should give a McCabe value of 3 = 1 binary branch + 1 return + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.17" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.17" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.17">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.17">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.17" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.17">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.17" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.17">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.17" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <thenStatement xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.17">
                <expression xsi:type="java:PrefixExpression" originalCompilationUnit="/1/@compilationUnits.17" operator="-">
                  <operand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.17" tokenValue="1"/>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.17">
              <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.17" tokenValue="1"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.17" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.17" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.0"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.18" name="McCabeBreakTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.18" name="breakTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.18" content="/** &#xA; * DISCUSS: Why does break increase complexity? Should give a McCabe value of 3 = 2 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.18">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.18" text="DISCUSS: Why does break increase complexity?"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.18" text="Should give a McCabe value of 3 = 2 binary branches + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.18" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.18" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.18">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.18">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.18" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.18">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.18" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.18">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.18" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <body xsi:type="java:Block" originalCompilationUnit="/1/@compilationUnits.18">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.18">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.18" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.18" escapedValue="&quot;a==b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </statements>
                <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.18">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.18" operator="==">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:BreakStatement" originalCompilationUnit="/1/@compilationUnits.18"/>
                </statements>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.18" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.18" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.19" name="McCabeContinueTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.19" name="continueTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.19" content="/** &#xA; * DISCUSS: Why does continue or break increase complexity? Should give a McCabe value of 4 = 3 binary branches + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.19">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.19" text="DISCUSS: Why does continue or break increase complexity?"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.19" text="Should give a McCabe value of 4 = 3 binary branches + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.19" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.19" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.19">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.19">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.19" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@leftOperand /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.2/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.19">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.19" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.1/@expression/@rightOperand /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.2/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.19">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.19" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <body xsi:type="java:Block" originalCompilationUnit="/1/@compilationUnits.19">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.19">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.19" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.19" escapedValue="&quot;a==b&quot;"/>
                    <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                    </expression>
                  </expression>
                </statements>
                <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.19">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.19" operator=">">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:ContinueStatement" originalCompilationUnit="/1/@compilationUnits.19"/>
                </statements>
                <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.19">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.19" operator="==">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:BreakStatement" originalCompilationUnit="/1/@compilationUnits.19"/>
                </statements>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.19" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.19" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.20" name="McCabeReturnTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.20" name="returnTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.20" content="/** &#xA; * DISCUSS: Why does return increase complexity? TODO: what about the last statement restriction? Should give a McCabe value of 3 = 1 binary branch + 1 return + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.20">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.20" text="DISCUSS: Why does return increase complexity?"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.20" text="TODO: what about the last statement restriction?"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.20" text="Should give a McCabe value of 3 = 1 binary branch + 1 return + 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.20" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.20" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.20">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.20">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.20" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.20">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.20" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.20">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.20" operator="!=">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
              </expression>
              <thenStatement xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.20">
                <expression xsi:type="java:PrefixExpression" originalCompilationUnit="/1/@compilationUnits.20" operator="-">
                  <operand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.20" tokenValue="1"/>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.20">
              <expression xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.20" tokenValue="1"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.20" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.20" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.0"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.21" name="McCabeLogicalOperatorsTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.21" name="whileTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.21" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 5  = 1 binary branch + &amp;&amp;[what is the same like an if]  + 1 binary branch + ||[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.21">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.21" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.21" text="Should give a McCabe value of 5 "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.21" text="= 1 binary branch + &amp;&amp;[what is the same like an if] "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.21" text="+ 1 binary branch + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.21" text="+ 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.21" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.21" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.21">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.21">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.21" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.21">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.21" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.21">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.21" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.21" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.21" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.21">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.21" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.21" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.21">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.21" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.21" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.21" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.21">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.21" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.21" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </thenStatement>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.21" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.21" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.22" name="McCabeLogicalOperatorsTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.22" name="logicalOperatorsTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.22" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 9  = 1 binary branch + &amp;&amp;[what is the same like an if]  + 1 binary branch + ||[what is the same like an if] + 1 while[same like if] + ||[what is the same like an if] + 1 while[same like if] + &amp;&amp;[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.22">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="Should give a McCabe value of 9 "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="= 1 binary branch + &amp;&amp;[what is the same like an if] "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1 binary branch + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1 while[same like if] + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1 while[same like if] + &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.22" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.22" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.22">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.22" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@expression/@rightOperand/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.22" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@expression/@rightOperand/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.22" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.22" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.22" name="logicalOperatorsTest2">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.22" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 9  = + 1 for[same like if] + ||[what is the same like an if] + 1 for[same like if] + &amp;&amp;[what is the same like an if] + 1 do[same like if] + ||[what is the same like an if] + 1 do[same like if] + &amp;&amp;[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.22">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="Should give a McCabe value of 9 "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="= + 1 for[same like if] + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1 for[same like if] + &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1 do[same like if] + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1 do[same like if] + &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.22" text="+ 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.22" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.22" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.22">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.22" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@initializers.0/@leftHandSide /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@updaters.0/@operand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@initializers.0/@leftHandSide /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@updaters.0/@operand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@expression/@rightOperand/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.22" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@expression/@rightOperand/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:ForStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&lt;">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.22" tokenValue="0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&lt;">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.22" tokenValue="5"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="/1/@compilationUnits.22">
                <operand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
              </updaters>
              <initializers xsi:type="java:Assignment" originalCompilationUnit="/1/@compilationUnits.22">
                <leftHandSide xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.22" tokenValue="0"/>
              </initializers>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:ForStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&lt;">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.22" tokenValue="0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&lt;">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.22" tokenValue="5"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="/1/@compilationUnits.22">
                <operand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
              </updaters>
              <initializers xsi:type="java:Assignment" originalCompilationUnit="/1/@compilationUnits.22">
                <leftHandSide xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.22" tokenValue="0"/>
              </initializers>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:DoStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:DoStatement" originalCompilationUnit="/1/@compilationUnits.22">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.22" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.22">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.22" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.22" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.22" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.22" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.23" name="McCabeLogicalOperatorsTest">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.23" name="logicalOperatorsTest">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.23" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 9  = 1 binary branch + &amp;&amp;[what is the same like an if]  + 1 binary branch + ||[what is the same like an if] + 1 while[same like if] + ||[what is the same like an if] + 1 while[same like if] + &amp;&amp;[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.23">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="Should give a McCabe value of 9 "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="= 1 binary branch + &amp;&amp;[what is the same like an if] "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 binary branch + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 while[same like if] + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 while[same like if] + &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.23" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.23" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.23">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.23" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@expression/@rightOperand/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.23" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@expression/@rightOperand/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:IfStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </thenStatement>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:WhileStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.23" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.23" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.23" name="logicalOperatorsTest2">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.23" content="/** &#xA; * Tester to find out how to caculated operators like &amp;&amp;, || correctly Should give a McCabe value of 9  = + 1 for[same like if] + ||[what is the same like an if] + 1 for[same like if] + &amp;&amp;[what is the same like an if] + 1 do[same like if] + ||[what is the same like an if] + 1 do[same like if] + &amp;&amp;[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.23">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="Tester to find out how to caculated operators like &amp;&amp;, || correctly"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="Should give a McCabe value of 9 "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="= + 1 for[same like if] + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 for[same like if] + &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 do[same like if] + ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 do[same like if] + &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.23" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.23" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.23">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.23" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@initializers.0/@leftHandSide /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@updaters.0/@operand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@initializers.0/@leftHandSide /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@updaters.0/@operand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@expression/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@expression/@rightOperand/@leftOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.23" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@expression/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@expression/@leftOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@expression/@rightOperand/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:ForStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&lt;">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&lt;">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="5"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="/1/@compilationUnits.23">
                <operand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
              </updaters>
              <initializers xsi:type="java:Assignment" originalCompilationUnit="/1/@compilationUnits.23">
                <leftHandSide xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="0"/>
              </initializers>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:ForStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&lt;">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&lt;">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="5"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="/1/@compilationUnits.23">
                <operand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
              </updaters>
              <initializers xsi:type="java:Assignment" originalCompilationUnit="/1/@compilationUnits.23">
                <leftHandSide xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="0"/>
              </initializers>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:DoStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
            <statements xsi:type="java:DoStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </expression>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.23" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.23" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.23" name="logicalOperatorsTest3">
          <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.23" content="/** &#xA; * Tester to find out how to calculate operators like &amp;&amp;, || correctly Should give a McCabe value of 5  = + 1 for[same like if]  + 1 &amp;&amp;[what is the same like an if] + 1 &amp;&amp; [what is the same like an if] + 1 ||[what is the same like an if] + 1&#xA; * @param pA&#xA; * @param pB&#xA; */&#xA;" prefixOfParent="true">
            <tags originalCompilationUnit="/1/@compilationUnits.23">
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="Tester to find out how to calculate operators like &amp;&amp;, || correctly"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="Should give a McCabe value of 5 "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="= + 1 for[same like if] "/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 &amp;&amp;[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 &amp;&amp; [what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1 ||[what is the same like an if]"/>
              <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.23" text="+ 1"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.23" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@parameters.0"/>
            </tags>
            <tags originalCompilationUnit="/1/@compilationUnits.23" tagName="@param">
              <fragments xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@parameters.1"/>
            </tags>
          </comments>
          <modifier static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.23">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.23" name="a" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@initializers.0/@leftHandSide /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@expression/@leftOperand/@leftOperand/@leftOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@expression/@leftOperand/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@expression/@rightOperand/@leftOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@updaters.0/@operand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@parameters.0"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <type type="/1/@orphanTypes.0"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.23" name="b" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@expression/@leftOperand/@leftOperand/@rightOperand/@rightOperand /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@expression/@rightOperand/@rightOperand">
                <initializer xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@parameters.1"/>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:ForStatement" originalCompilationUnit="/1/@compilationUnits.23">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="||">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="!=">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.1/@fragments.0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator=">">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="4"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@fragments.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&amp;&amp;">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&lt;">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.1/@fragments.0"/>
                      <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="0"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.23" operator="&lt;">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="5"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@fragments.0"/>
                    </leftOperand>
                  </leftOperand>
                </leftOperand>
              </expression>
              <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="/1/@compilationUnits.23">
                <operand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@fragments.0"/>
              </updaters>
              <initializers xsi:type="java:Assignment" originalCompilationUnit="/1/@compilationUnits.23">
                <leftHandSide xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@fragments.0"/>
                <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.23" tokenValue="0"/>
              </initializers>
              <body xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.23">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.23" method="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="/1/@compilationUnits.23" escapedValue="&quot;a!=b&quot;"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.4"/>
                  </expression>
                </expression>
              </body>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.23" name="pA" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@comments.0/@tags.1/@fragments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.23" name="pB" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@comments.0/@tags.2/@fragments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.1/@fragments.0/@initializer">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.24" name="CkNocChildOneChildOne">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.24" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkNocTest&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.24" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.24" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.24" text="Part of the structure used for the CkNocTest"/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.24" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.27"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.25" name="CkDitTest">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.25" content="/** &#xA; * @author Frederik MartickeThis is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite. The simulated structure looks as follows: CkDitLevelZeroWithNoParent ^ | | CkDitInterfaceLevelOneWithNoParent&#x9;&#x9;&#x9;CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| ----------------------------------------- | CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitLevelTwoWithNoParents ^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| CkDitTest ----------------------------------- Therefore the result should be DIT(CkDitTest) = 3, because  CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent is the longest Path inside the inheritance tree.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.25" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="This is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="The simulated structure looks as follows:"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="CkDitInterfaceLevelOneWithNoParent&#x9;&#x9;&#x9;CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="-----------------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitLevelTwoWithNoParents"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="CkDitTest -----------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="Therefore the result should be DIT(CkDitTest) = 3, because "/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.25" text="is the longest Path inside the inheritance tree."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.25" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.26"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.26" name="CkDitLevelTwoWithTwoParents" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.25/@superClass /1/@ownedElements.0/@ownedElements.35/@superClass /1/@ownedElements.0/@ownedElements.36/@superClass /1/@ownedElements.0/@ownedElements.42/@superClass">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.26" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.26" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.26" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.26" text="Part of the structure used for the CkDitTest."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.26" content="//nothing to do here" enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superInterfaces type="/1/@ownedElements.0/@ownedElements.33"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.29"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.27" name="CkNocChildOne" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.24/@superClass">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.27" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkNocTest&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.27" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.27" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.27" text="Part of the structure used for the CkNocTest"/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.27" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.30"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.28" name="CkDitLevelTwoWithNoParent">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.28" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.28" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.28" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.28" text="Part of the structure used for the CkDitTest."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.28" content="//nothing to do here" enclosedByParent="true"/>
        <modifier visibility="public"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.29" name="CkDitLevelOneWithParent" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.26/@superClass">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.29" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.29" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.29" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.29" text="Part of the structure used for the CkDitTest."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.29" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.34"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.30" name="CkNocTest" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.31/@superClass /1/@ownedElements.0/@ownedElements.27/@superClass">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.30" content="/** &#xA; * @author Frederik MartickeThis is testclass for the Number of children (NOC) metric from the CK metricssuite. The simulated structure looks as follows: CkNocTest ^ | | ------------------------- |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| CkNocChildOne&#x9;&#x9;&#x9;CkNocChildTwo ^ | CkNocChildOneChildOne Therefore the result should be NOC(CkNOCTest) = 2, because  The NOC Value only calculates direct Subtypes. Therefore CkNocChildOneChildOne gets not  included inside the result.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.30" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="This is testclass for the Number of children (NOC) metric from the CK metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="The simulated structure looks as follows:"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="CkNocTest"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="-------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="CkNocChildOne&#x9;&#x9;&#x9;CkNocChildTwo"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="CkNocChildOneChildOne"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="Therefore the result should be NOC(CkNOCTest) = 2, because "/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="The NOC Value only calculates direct Subtypes. Therefore CkNocChildOneChildOne gets not "/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.30" text="included inside the result."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.30" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.31" name="CkNocChildTwo">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.31" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkNocTest&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.31" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.31" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.31" text="Part of the structure used for the CkNocTest"/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.31" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.30"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="CkWmcTest">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.32" content="/** &#xA; * @author Frederik MartickeTestclass for the Weighted Methods Complexity Metric from the CK-Metricssuite. Should give a WMC-value of 9 = 3 Class methods + 3 instance methods + 3 methods with arguments.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.32" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.32" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.32" text="Testclass for the Weighted Methods Complexity Metric from the CK-Metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.32" text="Should give a WMC-value of 9 = 3 Class methods + 3 instance methods + 3 methods with arguments."/>
          </tags>
        </comments>
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestPublicStatic">
          <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//Class methods" prefixOfParent="true"/>
          <modifier visibility="public" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestPrivateStatic" usages="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.2/@body/@statements.0/@expression">
          <modifier visibility="private" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestProtectedStatic">
          <modifier visibility="protected" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.32">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.32" method="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.1"/>
            </statements>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestPublic">
          <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//Instance methods" prefixOfParent="true"/>
          <modifier visibility="public"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestPrivate" usages="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.5/@body/@statements.0/@expression">
          <modifier visibility="private"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestProtected">
          <modifier visibility="protected"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.32">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.32" method="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.4"/>
            </statements>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestPublic">
          <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//methods with parameters&#x9;" prefixOfParent="true"/>
          <modifier visibility="public" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.32" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.32" name="a">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.32" name="b">
            <modifier/>
            <type type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestPrivate" usages="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.8/@body/@statements.0/@expression">
          <modifier visibility="private"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.32">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.32" operator="+">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.7/@parameters.0"/>
                <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.32" tokenValue="1"/>
              </expression>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.32" name="i" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.7/@body/@statements.0/@expression/@rightOperand">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.0"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.32" name="WmcTestProtected">
          <modifier visibility="protected"/>
          <body originalCompilationUnit="/1/@compilationUnits.32">
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.32">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.32" method="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.7">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.32" tokenValue="42"/>
              </expression>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.32">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.8/@parameters.0"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.32" name="o" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.8/@body/@statements.1/@expression">
            <modifier/>
            <type type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.7"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.7"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" originalCompilationUnit="/1/@compilationUnits.33" name="CkDitInterfaceLevelOneWithNoParent" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.26/@superInterfaces.0 /1/@ownedElements.0/@ownedElements.37/@superInterfaces.0 /1/@ownedElements.0/@ownedElements.42/@superInterfaces.1">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.33" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.33" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.33" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.33" text="Part of the structure used for the CkDitTest"/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.33" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.34" name="CkDitLevelZeroWithNoParent" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.29/@superClass /1/@ownedElements.0/@ownedElements.37/@superClass">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.34" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.34" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.34" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.34" text="Part of the structure used for the CkDitTest."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.34" content="//nothing to do here" enclosedByParent="true"/>
        <modifier visibility="public"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.35" name="CkDitTest">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.35" content="/** &#xA; * @author Frederik MartickeThis is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite. The simulated structure looks as follows: CkDitLevelZeroWithNoParent ^ | | CkDitInterfaceLevelOneWithNoParent&#x9;&#x9;&#x9;CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| ----------------------------------------- | CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitLevelTwoWithNoParents ^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| CkDitTest ----------------------------------- Therefore the result should be DIT(CkDitTest) = 3, because  CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent is the longest Path inside the inheritance tree.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.35" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="This is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="The simulated structure looks as follows:"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="CkDitInterfaceLevelOneWithNoParent&#x9;&#x9;&#x9;CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="-----------------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitLevelTwoWithNoParents"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="CkDitTest -----------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="Therefore the result should be DIT(CkDitTest) = 3, because "/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.35" text="is the longest Path inside the inheritance tree."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.35" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.26"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.36" name="CkDitTest">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.36" content="/** &#xA; * @author Frederik MartickeThis is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite. The simulated structure looks as follows: CkDitLevelZeroWithNoParent ^ | | CkDitInterfaceLevelOneWithNoParent &lt;------ CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| ----------------------------------------- | CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitInterfaceLevelTwoWithNoParents ^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| CkDitTest ----------------------------------- Therefore the result should be DIT(CkDitTest) = 3, because  CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent is the longest Path inside the inheritance tree.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.36" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="This is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="The simulated structure looks as follows:"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="CkDitInterfaceLevelOneWithNoParent &lt;------ CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="-----------------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitInterfaceLevelTwoWithNoParents"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="CkDitTest -----------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="Therefore the result should be DIT(CkDitTest) = 3, because "/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.36" text="is the longest Path inside the inheritance tree."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.36" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superInterfaces type="/1/@ownedElements.0/@ownedElements.38"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.26"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.37" name="CkDitLevelOneWithParent">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.37" content="/** &#xA; * @author Frederik MartickePart of the structure used for the CkDitTest.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.37" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.37" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.37" text="Part of the structure used for the CkDitTest."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.37" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superInterfaces type="/1/@ownedElements.0/@ownedElements.33"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.34"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="CkDitInterfaceLevelTwoWithNoParents" proxy="true" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.36/@superInterfaces.0 /1/@ownedElements.0/@ownedElements.42/@superInterfaces.0"/>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.38" name="CkWmcSecondClass" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.7/@body/@statements.0/@expression/@rightOperand/@qualifier">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="/1/@compilationUnits.38">
          <modifier visibility="public" static="true"/>
          <type type="/1/@orphanTypes.0"/>
          <fragments originalCompilationUnit="/1/@compilationUnits.38" name="WmcVariableAccess" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.7/@body/@statements.0/@expression/@rightOperand">
            <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.38" tokenValue="1"/>
          </fragments>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.38" name="main">
          <modifier visibility="public" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.38">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.38">
              <type type="/1/@ownedElements.0/@ownedElements.40"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.38" name="t" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@body/@statements.1/@expression/@expression">
                <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="/1/@compilationUnits.38" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.9">
                  <type type="/1/@ownedElements.0/@ownedElements.40"/>
                </initializer>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.38">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.38" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.3">
                <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
              </expression>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.38" name="args">
            <modifier/>
            <type type="/1/@orphanTypes.9"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="CkWmcTest" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@body/@statements.0/@fragments.0/@initializer/@type /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.0/@fragments.0/@initializer/@type">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.39" content="/** &#xA; * @author Frederik MartickeTestclass for the Weighted Methods Complexity Metric from the CK-Metricssuite. Should give a WMC-value of 9 = 3 Class methods + 3 instance methods + 3 methods with arguments.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.39" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.39" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.39" text="Testclass for the Weighted Methods Complexity Metric from the CK-Metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.39" text="Should give a WMC-value of 9 = 3 Class methods + 3 instance methods + 3 methods with arguments."/>
          </tags>
        </comments>
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestPublicStatic">
          <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//Class methods" prefixOfParent="true"/>
          <modifier visibility="public" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestPrivateStatic" usages="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.2/@body/@statements.0/@expression">
          <modifier visibility="private" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestProtectedStatic">
          <modifier visibility="protected" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.39">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.39" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.1"/>
            </statements>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestPublic" usages="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@body/@statements.1/@expression /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.1/@expression">
          <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//Instance methods" prefixOfParent="true"/>
          <modifier visibility="public"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestPrivate" usages="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.5/@body/@statements.0/@expression">
          <modifier visibility="private"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestProtected">
          <modifier visibility="protected"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.39">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.39" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.4"/>
            </statements>
          </body>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestPublic">
          <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//methods with parameters&#x9;" prefixOfParent="true"/>
          <modifier visibility="public" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.39" content="//nothing to do here" enclosedByParent="true"/>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.39" name="a">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <parameters originalCompilationUnit="/1/@compilationUnits.39" name="b">
            <modifier/>
            <type type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestPrivate" usages="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.8/@body/@statements.0/@expression">
          <modifier visibility="private"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.39">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="/1/@compilationUnits.39" operator="+">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.0/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="/1/@ownedElements.0/@ownedElements.39"/>
                </rightOperand>
                <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.39" tokenValue="1"/>
              </expression>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.39" name="i">
            <modifier/>
            <type type="/1/@orphanTypes.0"/>
          </parameters>
          <returnType type="/1/@orphanTypes.0"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.39" name="WmcTestProtected">
          <modifier visibility="protected"/>
          <body originalCompilationUnit="/1/@compilationUnits.39">
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.39">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.39" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.7">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.39" tokenValue="42"/>
              </expression>
            </statements>
            <statements xsi:type="java:ReturnStatement" originalCompilationUnit="/1/@compilationUnits.39">
              <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.8/@parameters.0"/>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.39" name="o" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.8/@body/@statements.1/@expression">
            <modifier/>
            <type type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.7"/>
          </parameters>
          <returnType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.7"/>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="CkWmcTest" proxy="true" usages="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@body/@statements.0/@fragments.0/@initializer /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.0/@fragments.0/@initializer"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.40" name="CkWmcSecondClass">
        <modifier visibility="public"/>
        <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="/1/@compilationUnits.40">
          <modifier visibility="public" static="true"/>
          <type type="/1/@orphanTypes.0"/>
          <fragments originalCompilationUnit="/1/@compilationUnits.40" name="WmcVariableAccess">
            <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.40" tokenValue="1"/>
          </fragments>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="/1/@compilationUnits.40" name="main">
          <modifier visibility="public" static="true"/>
          <body originalCompilationUnit="/1/@compilationUnits.40">
            <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="/1/@compilationUnits.40">
              <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.40" content="//CkWmcSeconds becomes coupled to CkWmcTest by calling its contructor => +1 " prefixOfParent="true"/>
              <type type="/1/@ownedElements.0/@ownedElements.40"/>
              <fragments originalCompilationUnit="/1/@compilationUnits.40" name="t" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.1/@expression/@expression">
                <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="/1/@compilationUnits.40" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.9">
                  <type type="/1/@ownedElements.0/@ownedElements.40"/>
                </initializer>
              </fragments>
              <modifier/>
            </statements>
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.40">
              <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.40" content="//the methodcall would be another coupling, but the class was already count, therefore the value stays unchanged" prefixOfParent="true"/>
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.40" method="/1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.3">
                <expression xsi:type="java:SingleVariableAccess" variable="/1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.0/@fragments.0"/>
              </expression>
            </statements>
            <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="/1/@compilationUnits.40">
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="/1/@compilationUnits.40" method="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.40" tokenValue="1"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="/1/@compilationUnits.40" tokenValue="3"/>
                <expression xsi:type="java:TypeAccess" type="/1/@ownedElements.0/@ownedElements.15"/>
              </expression>
            </statements>
          </body>
          <parameters originalCompilationUnit="/1/@compilationUnits.40" name="args">
            <modifier/>
            <type type="/1/@orphanTypes.10"/>
          </parameters>
          <returnType type="/1/@orphanTypes.5"/>
        </bodyDeclarations>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="/1/@compilationUnits.41" name="CkDitTest">
        <comments xsi:type="java:Javadoc" originalCompilationUnit="/1/@compilationUnits.41" content="/** &#xA; * @author Frederik MartickeThis is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite. The simulated structure looks as follows: CkDitLevelZeroWithNoParent ^ | | CkDitInterfaceLevelOneWithNoParent &lt;------ CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; ^&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;----------------------------------------- |&#x9;&#x9;| |&#x9;CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitInterfaceLevelTwoWithNoParents |&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^ |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| |&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -----CkDitTest ----------------------------------- Therefore the result should be DIT(CkDitTest) = 3, because  CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent is the longest Path inside the inheritance tree.&#xA; */&#xA;" prefixOfParent="true">
          <tags originalCompilationUnit="/1/@compilationUnits.41" tagName="@author">
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text=" Frederik Marticke"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="This is a testclass for the Depth inheritance tree (DIT) metric from the CK metricssuite."/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="The simulated structure looks as follows:"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="CkDitInterfaceLevelOneWithNoParent &lt;------ CkDitLevelOneWithParent&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="^&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;-----------------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;CkDitLevelTwoWithTwoParents&#x9;&#x9;&#x9;CkDitInterfaceLevelTwoWithNoParents"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;^&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;^"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="|&#x9;&#x9;|&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="-----CkDitTest -----------------------------------"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="Therefore the result should be DIT(CkDitTest) = 3, because "/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="CkDitLevelTwoWithTwoParents -> CkDitLevelOneWithParent -> CkDitLevelZeroWithNoParent"/>
            <fragments xsi:type="java:TextElement" originalCompilationUnit="/1/@compilationUnits.41" text="is the longest Path inside the inheritance tree."/>
          </tags>
        </comments>
        <comments xsi:type="java:LineComment" originalCompilationUnit="/1/@compilationUnits.41" content="//nothing to do here." enclosedByParent="true"/>
        <modifier visibility="public"/>
        <superInterfaces type="/1/@ownedElements.0/@ownedElements.38"/>
        <superInterfaces type="/1/@ownedElements.0/@ownedElements.33"/>
        <superClass type="/1/@ownedElements.0/@ownedElements.26"/>
      </ownedElements>
    </ownedElements>
    <ownedElements name="java" proxy="true">
      <ownedPackages name="lang" proxy="true">
        <ownedElements xsi:type="java:AnnotationTypeDeclaration" name="SuppressWarnings" proxy="true" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.0/@annotations.0/@type"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="String" proxy="true" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.7/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.1/@returnType /1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.6/@parameters.1/@type /1/@orphanTypes.9/@elementType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.6/@parameters.1/@type /1/@orphanTypes.10/@elementType">
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.0"/>
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.2"/>
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.3"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Comparable" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.1">
          <typeParameters name="T" proxy="true"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="CharSequence" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.2"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="System" proxy="true" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@elseStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@elseStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@elseStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@elseStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.2/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@body/@expression/@expression/@qualifier /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@body/@expression/@expression/@qualifier">
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="out" proxy="true" usageInVariableAccess="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@elseStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@elseStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@elseStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@elseStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.2/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression/@expression /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@body/@expression/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@body/@expression/@expression"/>
          </bodyDeclarations>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="AutoCloseable" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.4/@superInterfaces.0"/>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Appendable" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@superInterfaces.0"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="Object" proxy="true" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.8/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.8/@parameters.0/@type /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.8/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.8/@parameters.0/@type"/>
      </ownedPackages>
      <ownedPackages name="io" proxy="true">
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Serializable" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1/@superInterfaces.0"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="PrintStream" proxy="true">
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="println" proxy="true" usages="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@elseStatement/@expression /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.2/@elseStatement/@expression /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@elseStatement/@expression /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.2/@elseStatement/@expression /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.2/@body/@expression /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.3/@body/@expression /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.2/@body/@statements.0/@expression /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.4/@body/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.5/@body/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.2/@body/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.3/@body/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.4/@body/@expression /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.5/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.2/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.3/@thenStatement/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.4/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.5/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.2/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.3/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.4/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.5/@body/@expression /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.2/@body/@expression">
            <parameters name="arg0" proxy="true">
              <type type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
            </parameters>
          </bodyDeclarations>
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.6"/>
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.4"/>
          <superClass type="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.2"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="FilterOutputStream" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@superClass">
          <superClass type="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.3"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="OutputStream" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.2/@superClass">
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.4"/>
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.5"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Closeable" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.3/@superInterfaces.0 /1/@ownedElements.1/@ownedPackages.1/@ownedElements.1/@superInterfaces.1">
          <superInterfaces type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.5"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Flushable" proxy="true" usagesInTypeAccess="/1/@ownedElements.1/@ownedPackages.1/@ownedElements.3/@superInterfaces.1"/>
      </ownedPackages>
    </ownedElements>
    <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@parameters.0/@type /1/@ownedElements.0/@ownedElements.7/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.8/@bodyDeclarations.1/@parameters.0/@type /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.11/@bodyDeclarations.1/@parameters.0/@type /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@body/@statements.2/@type /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@parameters.0/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@parameters.1/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@parameters.0/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@parameters.1/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@parameters.0/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@parameters.1/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@parameters.0/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@parameters.1/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.0/@type /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@body/@statements.1/@type /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.6/@parameters.0/@type /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.7/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.7/@parameters.0/@type /1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.0/@type /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.6/@parameters.0/@type /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.7/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.7/@parameters.0/@type /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.0/@type"/>
    <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
    <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float"/>
    <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
    <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean"/>
    <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.2/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.3/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.4/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.5/@returnType /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.6/@returnType /1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.0/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.1/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.2/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.3/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.4/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.5/@returnType /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.6/@returnType /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@returnType"/>
    <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char"/>
    <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
    <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
    <orphanTypes xsi:type="java:ArrayType" name="java.lang.String[]" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.39/@bodyDeclarations.1/@parameters.0/@type" dimensions="1">
      <elementType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
    </orphanTypes>
    <orphanTypes xsi:type="java:ArrayType" name="java.lang.String[]" usagesInTypeAccess="/1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@parameters.0/@type" dimensions="1">
      <elementType type="/1/@ownedElements.1/@ownedPackages.0/@ownedElements.1"/>
    </orphanTypes>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.0"/>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.1"/>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.2"/>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.3"/>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.4"/>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.5"/>
    <compilationUnits name="McCabeTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.6"/>
    <compilationUnits name="McCabeTest2.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest2.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.7"/>
    <compilationUnits name="McCabeTest2.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTest2.java" commentList="/1/@ownedElements.0/@ownedElements.8/@comments.0 /1/@ownedElements.0/@ownedElements.8/@comments.1 /1/@ownedElements.0/@ownedElements.8/@comments.2 /1/@ownedElements.0/@ownedElements.8/@comments.3 /1/@ownedElements.0/@ownedElements.8/@comments.4 /1/@ownedElements.0/@ownedElements.8/@comments.5 /1/@ownedElements.0/@ownedElements.8/@comments.6 /1/@ownedElements.0/@ownedElements.8/@comments.7" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.8"/>
    <compilationUnits name="McCabeTestIfElse.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTestIfElse.java" commentList="/1/@ownedElements.0/@ownedElements.9/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.9"/>
    <compilationUnits name="McCabeTestIfElse.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTestIfElse.java" commentList="/1/@ownedElements.0/@ownedElements.10/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.10"/>
    <compilationUnits name="McCabeTestSwitchCase.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeTestSwitchCase.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.11"/>
    <compilationUnits name="McCabeBreakTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeBreakTest.java" commentList="/1/@ownedElements.0/@ownedElements.12/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.12"/>
    <compilationUnits name="McCabeWhileTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeWhileTest.java" commentList="/1/@ownedElements.0/@ownedElements.13/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.13"/>
    <compilationUnits name="McCabeContinueTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeContinueTest.java" commentList="/1/@ownedElements.0/@ownedElements.14/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.14"/>
    <compilationUnits name="McCabeForTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeForTest.java" commentList="/1/@ownedElements.0/@ownedElements.15/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.15"/>
    <compilationUnits name="McCabeDoWhileTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeDoWhileTest.java" commentList="/1/@ownedElements.0/@ownedElements.16/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.16"/>
    <compilationUnits name="McCabeReturnTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeReturnTest.java" commentList="/1/@ownedElements.0/@ownedElements.17/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.17"/>
    <compilationUnits name="McCabeBreakTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeBreakTest.java" commentList="/1/@ownedElements.0/@ownedElements.18/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.18"/>
    <compilationUnits name="McCabeContinueTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeContinueTest.java" commentList="/1/@ownedElements.0/@ownedElements.19/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.19"/>
    <compilationUnits name="McCabeReturnTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeReturnTest.java" commentList="/1/@ownedElements.0/@ownedElements.20/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.20"/>
    <compilationUnits name="McCabeLogicalOperatorsTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeLogicalOperatorsTest.java" commentList="/1/@ownedElements.0/@ownedElements.21/@bodyDeclarations.0/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.21"/>
    <compilationUnits name="McCabeLogicalOperatorsTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeLogicalOperatorsTest.java" commentList="/1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.0/@comments.0 /1/@ownedElements.0/@ownedElements.22/@bodyDeclarations.1/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.22"/>
    <compilationUnits name="McCabeLogicalOperatorsTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\McCabeLogicalOperatorsTest.java" commentList="/1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.0/@comments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.1/@comments.0 /1/@ownedElements.0/@ownedElements.23/@bodyDeclarations.2/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.23"/>
    <compilationUnits name="CkNocChildOneChildOne.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkNocChildOneChildOne.java" commentList="/1/@ownedElements.0/@ownedElements.24/@comments.0 /1/@ownedElements.0/@ownedElements.24/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.24"/>
    <compilationUnits name="CkDitTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitTest.java" commentList="/1/@ownedElements.0/@ownedElements.25/@comments.0 /1/@ownedElements.0/@ownedElements.25/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.25"/>
    <compilationUnits name="CkDitLevelTwoWithTwoParents.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitLevelTwoWithTwoParents.java" commentList="/1/@ownedElements.0/@ownedElements.26/@comments.0 /1/@ownedElements.0/@ownedElements.26/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.26"/>
    <compilationUnits name="CkNocChildOne.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkNocChildOne.java" commentList="/1/@ownedElements.0/@ownedElements.27/@comments.0 /1/@ownedElements.0/@ownedElements.27/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.27"/>
    <compilationUnits name="CkDitLevelTwoWithNoParent.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitLevelTwoWithNoParent.java" commentList="/1/@ownedElements.0/@ownedElements.28/@comments.0 /1/@ownedElements.0/@ownedElements.28/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.28"/>
    <compilationUnits name="CkDitLevelOneWithParent.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitLevelOneWithParent.java" commentList="/1/@ownedElements.0/@ownedElements.29/@comments.0 /1/@ownedElements.0/@ownedElements.29/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.29"/>
    <compilationUnits name="CkNocTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkNocTest.java" commentList="/1/@ownedElements.0/@ownedElements.30/@comments.0 /1/@ownedElements.0/@ownedElements.30/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.30"/>
    <compilationUnits name="CkNocChildTwo.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkNocChildTwo.java" commentList="/1/@ownedElements.0/@ownedElements.31/@comments.0 /1/@ownedElements.0/@ownedElements.31/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.31"/>
    <compilationUnits name="CkWmcTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkWmcTest.java" commentList="/1/@ownedElements.0/@ownedElements.32/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.0/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.0/@body/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.1/@body/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.3/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.3/@body/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.4/@body/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.6/@comments.0 /1/@ownedElements.0/@ownedElements.32/@bodyDeclarations.6/@body/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.32"/>
    <compilationUnits name="CkDitInterfaceLevelOneWithNoParent.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitInterfaceLevelOneWithNoParent.java" commentList="/1/@ownedElements.0/@ownedElements.33/@comments.0 /1/@ownedElements.0/@ownedElements.33/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.33"/>
    <compilationUnits name="CkDitLevelZeroWithNoParent.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitLevelZeroWithNoParent.java" commentList="/1/@ownedElements.0/@ownedElements.34/@comments.0 /1/@ownedElements.0/@ownedElements.34/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.34"/>
    <compilationUnits name="CkDitTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitTest.java" commentList="/1/@ownedElements.0/@ownedElements.35/@comments.0 /1/@ownedElements.0/@ownedElements.35/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.35"/>
    <compilationUnits name="CkDitTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitTest.java" commentList="/1/@ownedElements.0/@ownedElements.36/@comments.0 /1/@ownedElements.0/@ownedElements.36/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.36"/>
    <compilationUnits name="CkDitLevelOneWithParent.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitLevelOneWithParent.java" commentList="/1/@ownedElements.0/@ownedElements.37/@comments.0 /1/@ownedElements.0/@ownedElements.37/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.37"/>
    <compilationUnits name="CkWmcSecondClass.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkWmcSecondClass.java" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.39"/>
    <compilationUnits name="CkWmcTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkWmcTest.java" commentList="/1/@ownedElements.0/@ownedElements.40/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.0/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.0/@body/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.1/@body/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.3/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.3/@body/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.4/@body/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.6/@comments.0 /1/@ownedElements.0/@ownedElements.40/@bodyDeclarations.6/@body/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.40"/>
    <compilationUnits name="CkWmcSecondClass.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkWmcSecondClass.java" commentList="/1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.0/@comments.0 /1/@ownedElements.0/@ownedElements.41/@bodyDeclarations.1/@body/@statements.1/@comments.0" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.41"/>
    <compilationUnits name="CkDitTest.java" originalFilePath="C:\Users\Worm\Git_Workspace\Studienarbeit\testGitRepoCheckoutDir\clones\mcCabeMetricTest.git\ScalaOclMetricToolTestclasses\src\testclasses\CkDitTest.java" commentList="/1/@ownedElements.0/@ownedElements.42/@comments.0 /1/@ownedElements.0/@ownedElements.42/@comments.1" package="/1/@ownedElements.0" types="/1/@ownedElements.0/@ownedElements.42"/>
  </java:Model>
</xmi:XMI>
